[
{
	"uri": "https://bbb-86-ko.github.io/%EA%B0%9C%EB%B0%9C%EC%9E%90/",
	"title": "개발자",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://bbb-86-ko.github.io/%EA%B8%88%EC%9C%B5%EC%96%B4%EB%A6%B0%EC%9D%B4/",
	"title": "금(융어)린이",
	"tags": [],
	"description": "",
	"content": "금린이의 투자공부 Basics Discover what this Hugo theme is all about and the core-concepts behind it.\n"
},
{
	"uri": "https://bbb-86-ko.github.io/%EA%B8%88%EC%9C%B5%EC%96%B4%EB%A6%B0%EC%9D%B4/%EB%8F%85%EC%84%9C/",
	"title": "독서",
	"tags": [],
	"description": "",
	"content": "금린이의 투자공부 - 독서 Basics Discover what this Hugo theme is all about and the core-concepts behind it.\n"
},
{
	"uri": "https://bbb-86-ko.github.io/%EA%B8%88%EC%9C%B5%EC%96%B4%EB%A6%B0%EC%9D%B4/%EB%8F%85%EC%84%9C/%ED%88%AC%EC%9E%90%EC%97%90%EB%8C%80%ED%95%9C%EC%83%9D%EA%B0%81/01.-%EC%8B%AC%EC%B8%B5%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%83%9D%EA%B0%81%ED%95%98%EB%9D%BC/",
	"title": "01. 심층적으로 생각하라",
	"tags": [],
	"description": "",
	"content": "투자 전략은 직관적이고 유연해야한다. 투자에는 언제나 적용 가능한 규칙은 없다.\n환경은 통제불가능하고 상황이 똑같이 반복되는 일은 드물기때문이다.\n또한 투자자의 심리가 시장에서 중요하게 작용하고 많은 변수에 영향을 받는다.\n그래서 투자 전략은 지속되지 않고 공식화 할 수 없다.\n그렇기 때문에 투자 전략은 직관적이고 유연해야한다.\n2차 사고(second-level thinking) 2차 사고는 다른 투자자들보다 더 현명하게 사고하는 것이며 남들과 다르면서 남들보다 더 나아가있는 것이다.\n성공적인 투자자는 시장 또는 다른투자자 보다 높은 수익을 낸다.\n그런데 성공적인 투자자는 운일수도 있고 탁월한 통찰력일 수 있다.\n성공적인 투자자가 되려면 탁월한 통찰력에 집중을 해야하면 이를 2차 사고라 할 수 있다.\n다만, 탁월한 통찰력은 누가 가르친다고 생기는 것은 아니며 남들보다 투자에 대한 이해력이 뛰어난 사람이다.\n결론 투자의 목적은 평균이 아닌 평균이상의 수익을 내는것이라 한다면 이를 달성하기 위해서는 2차 사고가 필요하다.\n"
},
{
	"uri": "https://bbb-86-ko.github.io/%EA%B8%88%EC%9C%B5%EC%96%B4%EB%A6%B0%EC%9D%B4/%EB%8F%85%EC%84%9C/%ED%88%AC%EC%9E%90%EC%97%90%EB%8C%80%ED%95%9C%EC%83%9D%EA%B0%81/02.-%EC%8B%9C%EC%9E%A5%EC%9D%98-%ED%9A%A8%EC%9C%A8%EC%84%B1%EC%9D%84-%EC%9D%B4%ED%95%B4%ED%95%98%EB%9D%BC/",
	"title": "02. 시장의 효율성을 이해하라",
	"tags": [],
	"description": "",
	"content": " 작성중\n "
},
{
	"uri": "https://bbb-86-ko.github.io/%EA%B8%88%EC%9C%B5%EC%96%B4%EB%A6%B0%EC%9D%B4/%EB%8F%85%EC%84%9C/%ED%88%AC%EC%9E%90%EC%97%90%EB%8C%80%ED%95%9C%EC%83%9D%EA%B0%81/03.-%EA%B0%80%EC%B9%98%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80/",
	"title": "03. 가치란 무엇인가",
	"tags": [],
	"description": "",
	"content": "투자에서 확실히 성공하려면 가장 먼저 내재가치의 정확한 평가가 이루어져야 한다. 정확한 내재가치 평가 없이 투자자로서 지속적인 성공을 희망하는 것은 말 그대로 희만일 뿐이다.  요약 이번 장에서는 분석방법과 투자방법에 대한 이야기를 하며 내재가치 평가의 중요성에 대하여 기술하였다.\n분석 방법   기본적분석\n 기업의 가치를 분석하는 것이다. 매수 전략 : 기본 내재가치가 가격과 동떨어질때 매수를 한다.    기술적분석\n 증권가격의 동향 분석하는 것이다. 매수 전략 : 미래의 증권가격 동향을 얘측하고 매수를 한다.    기술적분석의 쇠퇴 기술적분석은 과거의 주가의 동향을 분석하여 미래를 예측하게 되는 것인데 이는 마치 동전던지기를 하는 것과 다르지 않다.\n# 랜덤워크 가설 # 과거의 주가 동향은 미래의 주가를 예측하는 데 아무런 도움이 되지 않는다.  증권을 가치 있게 만드는 것은 무엇인가? 자원, 경영진, 공장, 소매상, 특허, 인재, 브랜드인지도, 성장가능성 그리고 소득과 현금유동성을 창출할 수 있는 능력이다.\n기본적 분석   가치투자\n 내재가치보다 싼 증권에 투자를 한다. 재무재표를 활용하여 기업의 현재가치를 수량화 하여 내재가치를 판단하고 가격이 싸다고 판단하면 투자를 한다. 유형자산, 현금유동성을 중요하게 생각한다. 순운전자본투자(net-net- investing)    성장투자\n 가치투자와 모멘텀투자 중간쯤에 있다. 미래의 가치가 빠르게 상승할 증권에 투자를 한다. 잠재력, 장미 빛 미래와 같은 미래의 가치에 투자를 한다.    공통점\n 두가지 모두 내재가치에 대한 판단은 필요하고 미래를 대상으로 하고 있다.    차이점\n 가치투자는 미래보다 현재가 낮은 상황이고, 성장투자는 현재보다 미래가 높은 상황이다. 성장투자자의 성공률은 낮다. 현재보다 미래를 아는 것이 더 어렵기 때문이다.    가치투자 쉬운가? NO 가치투자의 수익 = [내재가치에 대한 정확한 판단] + [확고한 신념]   정확하게 평가하는 것이 중요하다. 자산을 계속 보유해야한다.  내재가치를 올바르게 평가를 하였다고 해도 지금 당장 옳다고 입증되지는 않는다.   확고한 신념이 있어야한다.  확고한 신념으로 수익이 발생하지 않는 기간을 버텨야한다.    결론 미래의 주가를 판단할때 과거 주가의 동향으로 판단하는 것은 좋지 못하다.\n투자에 있어 내재가치 평가는 중요하며 평가 결과는 정확해야 한다.\n정확한 평가를 하여도 확고한 신념이 없으면 수익을 낼 수 없다.\n내재가치에 대한 정확한 판단과 확고한 신념이 함께 이루어져야 수익을 낼 수 잇다.\n"
},
{
	"uri": "https://bbb-86-ko.github.io/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://bbb-86-ko.github.io/",
	"title": "Hugo Learn Documentation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://bbb-86-ko.github.io/%EA%B0%9C%EB%B0%9C%EC%9E%90/jdk/jdk14/",
	"title": "jdk 14",
	"tags": [],
	"description": "",
	"content": "https://openjdk.java.net/projects/jdk/14/  Features 305:\tPattern Matching for instanceof (Preview) Pattern matching allows common logic in a program\n기존 instanceof 사용의 예. if (obj instanceof String) { String s = (String) obj; // use s } pattern matching 을 사용한 이유. 기존의 처리는 1) type 확인, 2) type casting, 3) 새로운 local variable를 사용하고있다. 이런 사용은 코드를 장황하게 만든다. 그리고 3가지의 요인으로 프로그램에 에러가 발생할 수있는 상황을 만들 수있다. 그래서 java가 pattern matching을 수용해야 한다고 생각하였다.\n사용 방법 if (obj instanceof String s) { // can use s here } else { // can't use s here } 위 조건문 내에서 만약 obj instanceof String이 true이면 obj를 String으로 casting 후 binding variable s에 값을 할당한다. 그리고 true block 안에서 binding variable s는 유요한 상태이다. 만약 if의 결과가 false인 경우 false block 내에서는 s를 사용할 수없다.\nif (!(obj instanceof String s)) { .. s.contains(..) ..\t// field in the enclosing class } else { .. s.contains(..) ..\t// binding variable } true block의 s는 binding variable가 아니고 class field이다. false block의 s는 binding variable이다. 즉 if 조건이 만족하는 block 에서 binding variable를 사용할 수 있는 것으로 보인다.\nif (obj instanceof String s \u0026amp;\u0026amp; s.length() \u0026gt; 5) {.. s.contains(..) ..} \u0026amp;\u0026amp;의 오른쪽조건은 instanceof가 무조건 true인 경우에만 동작을 한다. 그래서 block내의 s는 binding variable이다.\nif (obj instanceof String s || s.length() \u0026gt; 5) {.. s.contains(..) ..} ||의 경우 s는 binding variable가 아닌 class field이다. (테스트 필요)\n343:\tPackaging Tool (Incubator) 345:\tNUMA-Aware Memory Allocation for G1 349:\tJFR Event Streaming 352:\tNon-Volatile Mapped Byte Buffers 358:\tHelpful NullPointerExceptions 359:\tRecords (Preview) 361:\tSwitch Expressions (Standard) 362:\tDeprecate the Solaris and SPARC Ports 363:\tRemove the Concurrent Mark Sweep (CMS) Garbage Collector Concurrent Mark Sweep (CMS) Garbage Collector를 삭제 한다고 한다.\nNon Goals  다른 GC 삭제는 목표는 아니다. JEP를 대상으로하는 릴리스와 이전의 릴리스에서 CMS GC 삭제는 목표가 아니다.  CMS GC를 삭제하는 이유. 2년전 JEP 291에서는 우리는 다른 collectors의 개발을 가속화 하고 미래 릴리즈에서 삭제를 위해 CMS collector 사용하지 않았다. 이 시간 동안, 신뢰할 수 있는 contributors가 CMS 유지 관리를 시작하지 않았다.(??이해를 못함.)\n이 시간 동안, contributors는 CMS 유지 관리를 시작하지 않았다.\n그리고 또한 JDK 6 CMS의 후속 모델인 G1의 추가 개선 사항과 함께 두가지 새로운 collectors를 소개하였다.(ZGC, Shenandoah)\n이 시점에서 Hotspot JVM에서 사용 가능한 GC가 만약 CMS 성능을 능가하지 않는 경우 CMS를 제거하기에 충분한 오버 헤드가 있다.\n향후 기존 GC의 개선으로 CMS의 필요성이 더욱 줄어들 것으로 예상된다.\n설명 이 변경으로 CMS 컴파일이 비활성화되고 소스트리에서 gc/cms 디렉토리의 내용이 제거되고 CMS에만 관련된 옵션이 제거된다.\n또한 문서에서 CMS에 대한 References는 제거된다.\n그리고 CMS를 사용하려는 테스트는 제거되거나 필요에 따라 적용된다.\n메시지 Trying to use CMS via the -XX:+UseConcMarkSweepGC option will result in the following warning message:\nJava HotSpot(TM) 64-Bit Server VM warning: Ignoring option UseConcMarkSweepGC; \\ support was removed in \u0026lt;version\u0026gt; and the VM will continue execution using the default collector. 대안 CMS를 위한 코드는 repository 안에 유지할 수 있지만 컴파일 할 수 없습니다.\n사용자는 G1 GC 또는 다른 collectors 옮길수 있습니다.\n절대적으로 CMS가 필요한 사용자는 이전 릴리스에서 지원되는 동안 사용할 수 있습니다.\n364:\tZGC on macOS 365:\tZGC on Windows 366:\tDeprecate the ParallelScavenge + SerialOld GC Combination 367:\tRemove the Pack200 Tools and API 368:\tText Blocks (Second Preview) 370:\tForeign-Memory Access API (Incubator) "
},
{
	"uri": "https://bbb-86-ko.github.io/%EA%B0%9C%EB%B0%9C%EC%9E%90/jdk/",
	"title": "jdk release note",
	"tags": [],
	"description": "",
	"content": "  jdk 14   "
},
{
	"uri": "https://bbb-86-ko.github.io/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://bbb-86-ko.github.io/%EA%B8%88%EC%9C%B5%EC%96%B4%EB%A6%B0%EC%9D%B4/%EB%8F%85%EC%84%9C/%ED%88%AC%EC%9E%90%EC%97%90%EB%8C%80%ED%95%9C%EC%83%9D%EA%B0%81/",
	"title": "투자에 대한 생각",
	"tags": [],
	"description": "",
	"content": "투자에 대한 생각  01. 심층적으로 생각하라   02. 시장의 효율성을 이해하라   03. 가치란 무엇인가   "
}]